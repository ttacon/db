package fromfile

import "github.com/ttacon/pouch"

// THIS FILE IS GENERATED BY pouch.
// EDIT AT YOUR OWN PERIL.

func (i *CoolStruct) IdentifiableFields() ([]string, []interface{}) {
	var (
		cols   []string
		fields []interface{}
	)
	return cols, fields
}

func (i *CoolStruct) FieldsFor(fs []string) []interface{} {
	var fields = make([]interface{}, len(fs))

	for ii, f := range fs {
		switch f {
		case "Name":
			fields[ii] = &i.Name
		case "ID":
			fields[ii] = &i.ID
		case "yolo":
			fields[ii] = &i.Yolo
		}
	}
	return fields
}

func (i *CoolStruct) InsertableFields() ([]string, []interface{}) {
	return []string{
			"Name",
			"ID",
			"yolo",
		}, []interface{}{
			i.Name,
			i.ID,
			i.Yolo,
		}
}

func (i *CoolStruct) SetIdentifier(d interface{}) error {
	return nil
}

func (t *CoolStruct) Table() string {
	return ""
}

func (f *CoolStruct) FindableCopy() pouch.Findable {
	return &CoolStruct{}
}

func (g *CoolStruct) GetFieldsFor(fs []string) []interface{} {
	var fields = make([]interface{}, len(fs))

	for i, f := range fs {
		switch f {
		case "Name":
			fields[i] = &g.Name
		case "ID":
			fields[i] = &g.ID
		case "yolo":
			fields[i] = &g.Yolo
		}
	}
	return fields
}

func (g *CoolStruct) GetAllFields() ([]string, []interface{}) {
	var cols = []string{
		"Name",
		"ID",
		"yolo",
	}
	var fields = []interface{}{
		&g.Name,
		&g.ID,
		&g.Yolo,
	}
	return cols, fields
}

func (g *CoolStruct) Merge(_ pouch.Gettable) error {
	return nil
}
